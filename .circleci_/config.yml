version: 2
jobs:
  node:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: yarn test:ci

      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules

      - store_test_results:
          path: coverage

      - store_artifacts:
          path: coverage

      - run:
          name: codecov upload
          command: CODECOV_TOKEN=8b652c4c-c2b8-42ab-a0bd-987ec4f96659 bash <(curl -s https://codecov.io/bash)

#   android:
#     working_directory: ~/project/android
#     docker:
#       - image: circleci/android:api-27-node8-alpha
#     steps:
#       - checkout:
#           path: ~/project

#       - attach_workspace:
#           at: ~/project

#       - restore_cache:
#           key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

# #      - run: bundle install

# #      - save_cache:
# #          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
# #          paths:
# #            - vendor/bundle

#       - run:
#           name: fastlane tests
#           command: |
#             mkdir -p coverage/fastlane
#             bundle exec fastlane test
#             mv fastlane/report.xml coverage/fastlane
#       - store_test_results:
#           path: coverage

#       - store_artifacts:
#           path: coverage

  # ios:
  #   macos:
  #     xcode: "9.0"
  #   working_directory: ~/project

  #   # use a --login shell so our "set Ruby version" command gets picked up for later steps
  #   shell: /bin/bash --login -o pipefail

  #   steps:
  #     - checkout

  #     - run:
  #         name: set Ruby version
  #         command:  echo "ruby-2.4" > ~/.ruby-version

  #     - restore_cache:
  #         key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

  #     - restore_cache:
  #         key: node-v1-{{ checksum "package.json" }}-{{ arch }}

  #     # not using a workspace here as Node and Yarn versions
  #     # differ between our macOS executor image and the Docker containers above
  #     - run: yarn install

  #     - save_cache:
  #         key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
  #         paths:
  #           - ~/.cache/yarn

  #     - save_cache:
  #         key: node-v1-{{ checksum "package.json" }}-{{ arch }}
  #         paths:
  #           - node_modules

  #     - restore_cache:
  #         key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

  #     - run:
  #         command: bundle install
  #         working_directory: ios

  #     - save_cache:
  #         key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
  #         paths:
  #           - vendor/bundle

  #     - run:
  #         command: bundle exec fastlane test
  #         working_directory: ios

  #     - run:
  #         name: set up test results
  #         working_directory: ios
  #         when: always
  #         command: |
  #           mkdir -p coverage/fastlane coverage/xcode
  #           mv fastlane/report.xml coverage/fastlane
  #           mv fastlane/test_output/report.junit coverage/xcode/junit.xml
  #     - store_test_results:
  #         path: ios/coverage

  #     - store_artifacts:
  #         path: ios/coverage

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      # - android:
      #     requires:
      #       - node
#      - ios:
#          requires:
#            - node



# version: 2
# jobs:
#   build:
#     working_directory: ~/project
#     docker:
#       - image: circleci/node:8
#     steps:
#       - checkout
# #      - restore_cache:
# #          keys:
# #          - v1-dependencies-{{ checksum "package.json" }}
# #          - v1-dependencies-
#       - run: yarn install
# #      - save_cache:
# #          paths:
# #            - node_modules
# #          key: v1-dependencies-{{ checksum "package.json" }}
#       - run: yarn test:ci
# #       - persist_to_workspace:
# #           root: ~/project
# #           paths:
# #             - node_modules
# #       - store_test_results:
# #           path: ~/project/junit.xml

# #   android:
# #     working_directory: ~/project/android
# #     docker:
# #       - image: circleci/android:api-27-node8-alpha
# #     steps:
# #       - checkout:
# #           path: ~/project
# #       - attach_workspace:
# #           at: ~/project
# #       - run: bundle install
# #       - run: bundle exec fastlane test
# #       - store_test_results:
# #           path: ~/project/android/reports

# #   ios:
# #     macos:
# #       xcode: "9.0"
# #     working_directory: /Users/distiller/project/ios
# #     environment:
# #       FL_OUTPUT_DIR: /Users/distiller/project/output
# #     shell: /bin/bash --login -o pipefail
# #     steps:
# #       - checkout:
# #           path: /Users/distiller/project
# #       - run:
# #           name: Set Ruby Version
# #           command:  echo "ruby-2.4" > ~/.ruby-version
# #       # Not using a workspace here as Node and Yarn versions
# #       # differ between the macOS image and the Docker containers above.
# #       - run: yarn
# #       - run: bundle install
# #       - run: bundle exec fastlane test
# #       - run:
# #           command: cp $FL_OUTPUT_DIR/scan/report.junit $FL_OUTPUT_DIR/scan/results.xml
# #           when: always
# #       - store_artifacts:
# #           path: /Users/distiller/project/output
# #       - store_test_results:
# #           path: /Users/distiller/project/output/scan

# # workflows:
# #   version: 2
# #   node-android-ios:
# #     jobs:
# #       - build
# #       - android:
# #           requires:
# #             - build
# #       - ios:
# #           requires:
# #            - build